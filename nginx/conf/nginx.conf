user  root;
worker_processes  4;
worker_rlimit_nofile 2048;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    use epoll;
    worker_connections  2048;
    multi_accept on;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    client_max_body_size 50M;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    
    #gzip  on;

     server {
        listen       80;
        server_name  localhost;

        #charset utf-8;

        #access_log  logs/host.access.log  main;

        location /{
            root   /usr/local/componentManagementFront;
            index  index.html index.htm;
            
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET,POST,OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        }
    }


     server {
        listen       8091;
        server_name  localhost;

        #charset utf-8;

        #access_log  logs/host.access.log  main;

        location /{
            root   /usr/local/bigscreen;
            index  index.html index.htm;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET,POST,OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        }
    }

    server {
        listen       8092;
        server_name  localhost;

        #charset utf-8;

        #access_log  logs/host.access.log  main;

        location /{
            root   /usr/local/nginx_url;
            index  index.html index.htm;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET,POST,OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        }
    }

    server {
        listen       81;
        server_name  localhost;

        charset utf-8;

        location / {

            proxy_pass     http://127.0.0.1:833;

            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 1800;
            proxy_set_header Upgrade $http_upgrade;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods 'GET,POST,PUT,DELETE,OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Authorization,X-Requested-With,Content-Type,Origin,Accept,Credentials,token' always;
            
        }

        location /websocket {

            proxy_pass     http://127.0.0.1:833/websocket;

            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 1800;

            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Origin "";
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            add_header Access-Control-Allow-Origin $http_origin always;
            #add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods 'GET,POST,PUT,DELETE,OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Authorization,X-Requested-With,Content-Type,Origin,Accept,Credentials,token' always;
            
        }



    }


     server {
        listen       82;
        server_name  localhost;

        #charset utf-8;

        #access_log  logs/host.access.log  main;

        location /{
            root   /usr/local/dist;
            index  index.html index.htm;
            
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET,POST,OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        }
    }

    server {
        listen       83;
        server_name  _;

        charset utf-8;

       location /websocket {
            proxy_http_version 1.1;
            proxy_buffering off;
            
            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 1800;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Origin "";
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass     http://127.0.0.1:84;
            
            add_header Access-Control-Allow-Origin $http_origin always;
            #add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods 'GET,POST,PUT,DELETE,OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Authorization,X-Requested-With,Content-Type,Origin,Accept,Credentials' always;
    
        }
    }

    server {
        listen       8093;
        server_name  localhost;

        #charset utf-8;

        #access_log  logs/host.access.log  main;

        location /{
            root   /usr/local/keshihua;
            index  index.html index.htm;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET,POST,OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
